openapi: 3.0.1
info:
  title: Smart Home Devices API
  description: API for managing devices in a Smart Home application.
  version: v1
paths:
  /api/admin:
    get:
      tags:
        - Admin
      summary: Generates the OpenAPI specification.
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error
  /api/devices:
    get:
      tags:
        - Devices
      summary: Retrieves a list of all devices.
      responses:
        '200':
          description: Returns the list of devices
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
        '500':
          description: If there was an internal server error
    post:
      tags:
        - Devices
      summary: Registers a new device.
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDeviceDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AddDeviceDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddDeviceDto'
      responses:
        '201':
          description: Returns the newly registered device
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Device'
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
            text/json:
              schema:
                $ref: '#/components/schemas/Device'
        '400':
          description: If the device is invalid
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: If there was an internal server error
  '/api/devices/{id}':
    get:
      tags:
        - Devices
      summary: Retrieves a specific device by unique ID.
      parameters:
        - name: id
          in: path
          description: The ID of the device.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Returns the requested device
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Device'
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
            text/json:
              schema:
                $ref: '#/components/schemas/Device'
        '404':
          description: If the device was not found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: If there was an internal server error
    put:
      tags:
        - Devices
      summary: Updates an existing device.
      parameters:
        - name: id
          in: path
          description: The ID of the device.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDeviceDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AddDeviceDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddDeviceDto'
      responses:
        '200':
          description: Returns the updated device
        '400':
          description: If the device is invalid
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: If the device was not found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: If there was an internal server error
    delete:
      tags:
        - Devices
      summary: Deletes a specific device by unique ID.
      parameters:
        - name: id
          in: path
          description: The ID of the device.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Indicates that the device was successfully deleted
        '404':
          description: If the device was not found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: If there was an internal server error
  '/api/devices/{id}/status':
    patch:
      tags:
        - Devices
      summary: Sets the status of a device (on/off).
      parameters:
        - name: id
          in: path
          description: The ID of the device.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: 'The desired status of the device (true for on, false for off).'
        content:
          application/json:
            schema:
              type: boolean
          text/json:
            schema:
              type: boolean
          application/*+json:
            schema:
              type: boolean
      responses:
        '200':
          description: Indicates that the device status was successfully updated
        '404':
          description: If the device was not found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '400':
          description: If the request was invalid
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: If there was an internal server error
  /api/devices/call:
    post:
      tags:
        - Devices
      summary: Sends a command to a device.
      requestBody:
        description: The message to send.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceMessage'
          text/json:
            schema:
              $ref: '#/components/schemas/DeviceMessage'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeviceMessage'
      responses:
        '200':
          description: Indicates that the command was successfully sent
        '404':
          description: If the device was not found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '400':
          description: If the request was invalid
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: If there was an internal server error
  /api/houses:
    get:
      tags:
        - Houses
      summary: Get all houses
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/House'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/House'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/House'
        '500':
          description: Internal Server Error
    post:
      tags:
        - Houses
      summary: Create new house
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddHouseDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AddHouseDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddHouseDto'
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/House'
            application/json:
              schema:
                $ref: '#/components/schemas/House'
            text/json:
              schema:
                $ref: '#/components/schemas/House'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Internal Server Error
  '/api/houses/{id}':
    get:
      tags:
        - Houses
      summary: Get house by identifier
      parameters:
        - name: id
          in: path
          description: House identifier
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/House'
            application/json:
              schema:
                $ref: '#/components/schemas/House'
            text/json:
              schema:
                $ref: '#/components/schemas/House'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Internal Server Error
    put:
      tags:
        - Houses
      summary: Update house by identifier.
      parameters:
        - name: id
          in: path
          description: House identifier
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddHouseDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AddHouseDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddHouseDto'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Internal Server Error
    delete:
      tags:
        - Houses
      summary: Delete house by identifier
      parameters:
        - name: id
          in: path
          description: House identifier
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Internal Server Error
components:
  schemas:
    AddDeviceDto:
      type: object
      properties:
        status:
          type: boolean
        houseId:
          type: string
          format: uuid
          nullable: true
        deviceTypeId:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
      description: Add Device Dto
    AddHouseDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        zipCode:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
      additionalProperties: false
      description: Add House Dto
    CommandType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
      type: integer
      format: int32
    Device:
      type: object
      properties:
        id:
          type: string
          format: uuid
        serialNo:
          type: string
          format: uuid
        status:
          type: boolean
        houseId:
          type: string
          format: uuid
          nullable: true
        deviceTypeId:
          type: integer
          format: int32
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        house:
          $ref: '#/components/schemas/House'
        deviceType:
          $ref: '#/components/schemas/DeviceType'
      additionalProperties: false
    DeviceMessage:
      type: object
      properties:
        deviceId:
          type: string
          format: uuid
        commandType:
          $ref: '#/components/schemas/CommandType'
        payload:
          type: string
          nullable: true
      additionalProperties: false
    DeviceType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
    House:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        zipCode:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        timeStamp:
          type: string
          format: date-time
        devices:
          type: array
          items:
            $ref: '#/components/schemas/Device'
          nullable: true
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }